<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxp.blog.dao.ArticlesContentMapper" >
  <resultMap id="BaseResultMap" type="com.xxp.blog.pojo.ArticlesContent" >
	<id column="id" property="id" />
	<result column="content" property="content" />
  </resultMap>
  <sql id="Base_Column_List" >
		`id`
		,`content`
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM articles_content
    WHERE `id` = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM articles_content
    <include refid="map_params_where_condition" />
	ORDER BY `id` DESC
	LIMIT 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM articles_content
    WHERE `id` = #{id}
  </delete>
  <insert id="insert" parameterType="com.xxp.blog.pojo.ArticlesContent" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO articles_content (
	  `id`
	  ,`content`
      )
    VALUES (
		  
		  #{id}
		  ,
		  #{content}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxp.blog.pojo.ArticlesContent" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO articles_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="id != null" >
			`id`,
		  </if>
		  <if test="content != null" >
			`content`,
		  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="id != null" >
			#{id},
		  </if>
		  <if test="content != null" >
			#{content},
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxp.blog.pojo.ArticlesContent" >
    UPDATE articles_content
    <set >
	  <if test="id != null" >
        `id` = #{id},
      </if>
	  <if test="content != null" >
        `content` = #{content},
      </if>
    </set>
    WHERE `id` = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxp.blog.pojo.ArticlesContent" >
	UPDATE articles_content SET
        `id` = #{id},
        `content` = #{content}
    WHERE `id` = #{id}
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND `id` = #{id}
	  </if>
	  <if test="content != null" >
        AND `content` = #{content}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND `id` = #{condition.id}
	  </if>
	  <if test="condition.content != null" >
        AND `content` = #{condition.content}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  `${expression.column}` ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  `${expression.column}` ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  `${expression.column}` ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  `${expression.column}` ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM articles_content
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY `id` DESC
    </if>
    <if test="orderBy != null" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM articles_content
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(id)
    FROM articles_content
    <include refid="map_params_where_condition" />
  </select>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE articles_content
    <set>
	  <if test="entity.id != null" >
        `id` = #{entity.id},
      </if>
	  <if test="entity.content != null" >
        `content` = #{entity.content},
      </if>
    </set>
    <include refid="map_params_where_condition" />
  </update>
</mapper>