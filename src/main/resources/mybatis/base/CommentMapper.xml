<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxp.blog.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.xxp.blog.pojo.Comment" >
	<id column="id" property="id" />
	<result column="aid" property="aid" />
	<result column="name" property="name" />
	<result column="linkMsg" property="linkMsg" />
	<result column="msg" property="msg" />
	<result column="reply" property="reply" />
	<result column="ip" property="ip" />
	<result column="date_add" property="dateAdd" />
  </resultMap>
  <sql id="Base_Column_List" >
		id
		,aid
		,name
		,linkMsg
		,msg
		,reply
		,ip
		,date_add
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM comment
    WHERE id = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM comment
    <include refid="map_params_where_condition" />
	ORDER BY id DESC
	LIMIT 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM comment
    WHERE id = #{id}
  </delete>
  <insert id="insert" parameterType="com.xxp.blog.pojo.Comment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO comment (
	  aid
	  ,name
	  ,linkMsg
	  ,msg
	  ,reply
	  ,ip
	  ,date_add
      )
    VALUES (
		  
		  #{aid}
		  ,
		  #{name}
		  ,
		  #{linkMsg}
		  ,
		  #{msg}
		  ,
		  #{reply}
		  ,
		  #{ip}
		  ,
		  NOW()
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxp.blog.pojo.Comment" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="aid != null" >
			aid,
		  </if>
		  <if test="name != null" >
			name,
		  </if>
		  <if test="linkMsg != null" >
			linkMsg,
		  </if>
		  <if test="msg != null" >
			msg,
		  </if>
		  <if test="reply != null" >
			reply,
		  </if>
		  <if test="ip != null" >
			ip,
		  </if>
			date_add,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="aid != null" >
			#{aid},
		  </if>
		  <if test="name != null" >
			#{name},
		  </if>
		  <if test="linkMsg != null" >
			#{linkMsg},
		  </if>
		  <if test="msg != null" >
			#{msg},
		  </if>
		  <if test="reply != null" >
			#{reply},
		  </if>
		  <if test="ip != null" >
			#{ip},
		  </if>
		  NOW(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxp.blog.pojo.Comment" >
    UPDATE comment
    <set >
	  <if test="aid != null" >
        aid = #{aid},
      </if>
	  <if test="name != null" >
        name = #{name},
      </if>
	  <if test="linkMsg != null" >
        linkMsg = #{linkMsg},
      </if>
	  <if test="msg != null" >
        msg = #{msg},
      </if>
	  <if test="reply != null" >
        reply = #{reply},
      </if>
	  <if test="ip != null" >
        ip = #{ip},
      </if>
	  <if test="dateAdd != null" >
        date_add = #{dateAdd},
      </if>
    </set>
    WHERE id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxp.blog.pojo.Comment" >
	UPDATE comment SET
        aid = #{aid},
        name = #{name},
        linkMsg = #{linkMsg},
        msg = #{msg},
        reply = #{reply},
        ip = #{ip},
        date_add = #{dateAdd}
    WHERE id = #{id}
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND id = #{id}
	  </if>
	  <if test="aid != null" >
        AND aid = #{aid}
	  </if>
	  <if test="name != null" >
        AND name = #{name}
	  </if>
	  <if test="linkMsg != null" >
        AND linkMsg = #{linkMsg}
	  </if>
	  <if test="msg != null" >
        AND msg = #{msg}
	  </if>
	  <if test="reply != null" >
        AND reply = #{reply}
	  </if>
	  <if test="ip != null" >
        AND ip = #{ip}
	  </if>
	  <if test="dateAdd != null" >
        AND date_add = #{dateAdd}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND id = #{condition.id}
	  </if>
	  <if test="condition.aid != null" >
        AND aid = #{condition.aid}
	  </if>
	  <if test="condition.name != null" >
        AND name = #{condition.name}
	  </if>
	  <if test="condition.linkMsg != null" >
        AND linkMsg = #{condition.linkMsg}
	  </if>
	  <if test="condition.msg != null" >
        AND msg = #{condition.msg}
	  </if>
	  <if test="condition.reply != null" >
        AND reply = #{condition.reply}
	  </if>
	  <if test="condition.ip != null" >
        AND ip = #{condition.ip}
	  </if>
	  <if test="condition.dateAdd != null" >
        AND date_add = #{condition.dateAdd}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM comment
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY id DESC
    </if>
    <if test="orderBy != null" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM comment
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(id)
    FROM comment
    <include refid="map_params_where_condition" />
  </select>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE comment
    <set>
	  <if test="entity.aid != null" >
        aid = #{entity.aid},
      </if>
	  <if test="entity.name != null" >
        name = #{entity.name},
      </if>
	  <if test="entity.linkMsg != null" >
        linkMsg = #{entity.linkMsg},
      </if>
	  <if test="entity.msg != null" >
        msg = #{entity.msg},
      </if>
	  <if test="entity.reply != null" >
        reply = #{entity.reply},
      </if>
	  <if test="entity.ip != null" >
        ip = #{entity.ip},
      </if>
	  <if test="entity.dateAdd != null" >
        date_add = #{entity.dateAdd},
      </if>
    </set>
    <include refid="map_params_where_condition" />
  </update>
</mapper>