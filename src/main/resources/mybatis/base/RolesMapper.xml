<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xuxinpei.blog.dao.RolesMapper" >
  <resultMap id="BaseResultMap" type="com.xuxinpei.blog.pojo.Roles" >
	<id column="id" property="id" />
	<result column="name" property="name" />
	<result column="profile" property="profile" />
  </resultMap>
  <sql id="Base_Column_List" >
		id
		,name
		,profile
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM roles
    WHERE id = #{id}
  </select>
  <select id="getByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM roles
    <include refid="map_params_where_condition" />
	ORDER BY id DESC
	LIMIT 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    DELETE FROM roles
    WHERE id = #{id}
  </delete>
  <insert id="insert" parameterType="com.xuxinpei.blog.pojo.Roles" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO roles (
	  name
	  ,profile
      )
    VALUES (
		  
		  #{name}
		  ,
		  #{profile}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xuxinpei.blog.pojo.Roles" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    INSERT INTO roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
		  <if test="name != null" >
			name,
		  </if>
		  <if test="profile != null" >
			profile,
		  </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
		  <if test="name != null" >
			#{name},
		  </if>
		  <if test="profile != null" >
			#{profile},
		  </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xuxinpei.blog.pojo.Roles" >
    UPDATE roles
    <set >
	  <if test="name != null" >
        name = #{name},
      </if>
	  <if test="profile != null" >
        profile = #{profile},
      </if>
    </set>
    WHERE id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xuxinpei.blog.pojo.Roles" >
	UPDATE roles SET
        name = #{name},
        profile = #{profile}
    WHERE id = #{id}
  </update>
  <sql id="map_params_where_condition" >
    <trim prefix="WHERE" prefixOverrides="AND">
	  <if test="id != null" >
        AND id = #{id}
	  </if>
	  <if test="name != null" >
        AND name = #{name}
	  </if>
	  <if test="profile != null" >
        AND profile = #{profile}
	  </if>
	  <if test="condition != null">
	  <if test="condition.id != null" >
        AND id = #{condition.id}
	  </if>
	  <if test="condition.name != null" >
        AND name = #{condition.name}
	  </if>
	  <if test="condition.profile != null" >
        AND profile = #{condition.profile}
	  </if>
	  </if>
	  <if test="vo != null and !vo.expressionChainList.empty">
        AND
        <foreach collection="vo.expressionChainList" item="expressionChain" separator="OR">
          <if test="!expressionChain.expressionList.empty">
            <foreach collection="expressionChain.expressionList" item="expression" separator="AND">
              <choose>
                <when test="expression.type == 0">
                  ${expression.column} ${expression.operator}
                </when>
                <when test="expression.type == 1">
                  ${expression.column} ${expression.operator} #{expression.value}
                </when>
                <when test="expression.type == 2">
                  ${expression.column} ${expression.operator} #{expression.value} AND #{expression.value1}
                </when>
                <when test="expression.type == 3">
                  ${expression.column} ${expression.operator}
                  <foreach collection="expression.values" item="value" open="(" separator="," close=")">
                    #{value}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </if>
        </foreach>
      </if>
    </trim>
  </sql>
  <select id="getList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM roles
    <include refid="map_params_where_condition" />
    <if test="orderBy == null" >
      ORDER BY id DESC
    </if>
    <if test="orderBy != null" >
      ORDER BY ${orderBy}
    </if>
    <if test="pageBeginIndex != null and pageSize != null" >
      LIMIT #{pageBeginIndex},#{pageSize}
    </if>
    <if test="pageBeginIndex == null and pageSize != null" >
      LIMIT #{pageSize}
    </if>
    <if test="pageBeginIndex != null and pageSize == null" >
      LIMIT #{pageBeginIndex}
    </if>
  </select>
  <delete id="delete" parameterType="java.util.Map" >
    DELETE
    FROM roles
    <include refid="map_params_where_condition" />
  </delete>
  <select id="getCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    SELECT COUNT(id)
    FROM roles
    <include refid="map_params_where_condition" />
  </select>
  <update id="updateByCondition" parameterType="java.util.Map" >
    UPDATE roles
    <set>
	  <if test="entity.name != null" >
        name = #{entity.name},
      </if>
	  <if test="entity.profile != null" >
        profile = #{entity.profile},
      </if>
    </set>
    <include refid="map_params_where_condition" />
  </update>
</mapper>